/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package telas;

import com.sun.glass.events.KeyEvent;
import gamedcheroes.Equipe;
import gamedcheroes.Jogador;
import gamedcheroes.Partida;
import java.awt.Color;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import personagens.base.Personagem;
import gamedcheroes.controle.EquipeControle;
import javax.swing.JOptionPane;

public class TelaSelecionaEquipe extends javax.swing.JFrame {

    private Partida partida;
    private Jogador jogador;
    ArrayList<Personagem> listPersonagensSelecionados = new ArrayList<Personagem>();
    DefaultTableModel modeloTabelaEquipe;
    Equipe equipeHumana, equipeMaquina;

    public TelaSelecionaEquipe(Jogador jogador) {
        this.getContentPane().setBackground(Color.white);
        this.jogador = jogador;
        initComponents();
        jLabelNomeJogador.setText(this.jogador.getNome() + ",");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelNomeJogador = new javax.swing.JLabel();
        jLabelSelecioneSuaEquipe = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableEquipe = new javax.swing.JTable();
        jButtonAvancar = new javax.swing.JButton();
        jButtonAdicionarPersonagem = new javax.swing.JButton();
        jButtonRemoverPersonagem = new javax.swing.JButton();
        jLabelQtdePersonagensSelecionadosTexto = new javax.swing.JLabel();
        jLabelQtdePersonagensSelecionados = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Game DC Heroes - Seleciona Equipe");
        setResizable(false);
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });

        jLabelNomeJogador.setFont(new java.awt.Font("Comic Sans MS", 0, 24)); // NOI18N
        jLabelNomeJogador.setForeground(new java.awt.Color(59, 95, 161));
        jLabelNomeJogador.setText("Jogador,");

        jLabelSelecioneSuaEquipe.setFont(new java.awt.Font("Comic Sans MS", 0, 24)); // NOI18N
        jLabelSelecioneSuaEquipe.setForeground(new java.awt.Color(59, 95, 161));
        jLabelSelecioneSuaEquipe.setText("Selecione sua equipe:");

        jTableEquipe.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Nome", "Dano", "Resistência", "Qtde. Vida", "Alinhamento", "Classe"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableEquipe.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTableEquipeKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTableEquipe);
        if (jTableEquipe.getColumnModel().getColumnCount() > 0) {
            jTableEquipe.getColumnModel().getColumn(0).setResizable(false);
            jTableEquipe.getColumnModel().getColumn(1).setResizable(false);
            jTableEquipe.getColumnModel().getColumn(2).setResizable(false);
            jTableEquipe.getColumnModel().getColumn(3).setResizable(false);
            jTableEquipe.getColumnModel().getColumn(4).setResizable(false);
            jTableEquipe.getColumnModel().getColumn(5).setResizable(false);
        }

        jButtonAvancar.setText("Avançar");
        jButtonAvancar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonAvancarMouseClicked(evt);
            }
        });
        jButtonAvancar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButtonAvancarKeyPressed(evt);
            }
        });

        jButtonAdicionarPersonagem.setText("Adicionar Personagem");
        jButtonAdicionarPersonagem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonAdicionarPersonagemMouseClicked(evt);
            }
        });
        jButtonAdicionarPersonagem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButtonAdicionarPersonagemKeyPressed(evt);
            }
        });

        jButtonRemoverPersonagem.setLabel("Remover Personagem");
        jButtonRemoverPersonagem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonRemoverPersonagemMouseClicked(evt);
            }
        });
        jButtonRemoverPersonagem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButtonRemoverPersonagemKeyPressed(evt);
            }
        });

        jLabelQtdePersonagensSelecionadosTexto.setForeground(new java.awt.Color(59, 95, 161));
        jLabelQtdePersonagensSelecionadosTexto.setText("Quantidade de Personagens Selecionados:");

        jLabelQtdePersonagensSelecionados.setForeground(new java.awt.Color(59, 95, 161));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelSelecioneSuaEquipe)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButtonAdicionarPersonagem)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonRemoverPersonagem))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelNomeJogador)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 740, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabelQtdePersonagensSelecionadosTexto)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelQtdePersonagensSelecionados)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButtonAvancar)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabelNomeJogador)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelSelecioneSuaEquipe)
                    .addComponent(jButtonAdicionarPersonagem)
                    .addComponent(jButtonRemoverPersonagem))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAvancar)
                    .addComponent(jLabelQtdePersonagensSelecionadosTexto)
                    .addComponent(jLabelQtdePersonagensSelecionados))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //<editor-fold defaultstate="collapsed" desc="Eventos">

    private void jButtonAdicionarPersonagemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonAdicionarPersonagemMouseClicked
        adicionarPersonagem();
    }//GEN-LAST:event_jButtonAdicionarPersonagemMouseClicked

    private void jButtonAdicionarPersonagemKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButtonAdicionarPersonagemKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            adicionarPersonagem();
        }
    }//GEN-LAST:event_jButtonAdicionarPersonagemKeyPressed

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        String[] colunas = new String[]{"Nome", "Dano", "Resistência", "Qtde. Vida", "Alinhamento", "Classe"};
        modeloTabelaEquipe = new DefaultTableModel(colunas, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                //all cells false
                return false;
            }
        };

        listPersonagensSelecionados.stream().forEach((Personagem personagem) -> {
            modeloTabelaEquipe.addRow(personagem.toObject());
        });
        jTableEquipe.setModel(modeloTabelaEquipe);

        jLabelQtdePersonagensSelecionados.setText(String.valueOf(listPersonagensSelecionados.size()));
    }//GEN-LAST:event_formWindowGainedFocus

    private void jButtonRemoverPersonagemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonRemoverPersonagemMouseClicked
        int[] indicesSelecionados = jTableEquipe.getSelectedRows();
        removerPersonagem(indicesSelecionados);
    }//GEN-LAST:event_jButtonRemoverPersonagemMouseClicked

    private void jButtonRemoverPersonagemKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButtonRemoverPersonagemKeyPressed
        int[] indicesSelecionados = jTableEquipe.getSelectedRows();
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            removerPersonagem(indicesSelecionados);
        }
    }//GEN-LAST:event_jButtonRemoverPersonagemKeyPressed

    private void jButtonAvancarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonAvancarMouseClicked
        jogar();
    }//GEN-LAST:event_jButtonAvancarMouseClicked

    private void jButtonAvancarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButtonAvancarKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jogar();
        }
    }//GEN-LAST:event_jButtonAvancarKeyPressed

    private void jTableEquipeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTableEquipeKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_DELETE) {
            int[] indicesSelecionados = jTableEquipe.getSelectedRows();
            removerPersonagem(indicesSelecionados);
        }
    }//GEN-LAST:event_jTableEquipeKeyPressed

    //</editor-fold>
  
    //<editor-fold defaultstate="collapsed" desc="Funções">
    
    
    private void jogar() {
        if (listPersonagensSelecionados.size() > 0) {
            EquipeControle equipeControle = new EquipeControle();
            equipeHumana = new Equipe(jogador, listPersonagensSelecionados);
            equipeMaquina = equipeControle.GeraEquipeMaquinaEquivalente(listPersonagensSelecionados);

            partida = new Partida(equipeHumana, equipeMaquina);
            TelaSelecionaDificuldade telaSelecionaDificuldade = new TelaSelecionaDificuldade(partida);
            telaSelecionaDificuldade.setLocationRelativeTo(null);
            telaSelecionaDificuldade.setVisible(true);
            this.dispose();
        } else {
            JOptionPane.showMessageDialog(null, "Selecione pelo menos um personagem!", "Game DC Heroes - Equipe", JOptionPane.INFORMATION_MESSAGE, null);
        }
    }

    private void adicionarPersonagem() {
        //Constrói a TelaSelecionaPersonagem

        TelaSelecionaPersonagem telaSelecionaPersonagem = new TelaSelecionaPersonagem(listPersonagensSelecionados);
        telaSelecionaPersonagem.setLocationRelativeTo(null);
        telaSelecionaPersonagem.setVisible(true);
    }

    private void removerPersonagem(int[] indicesPersonagens) {
        Integer tamanhoLista = indicesPersonagens.length;
        for (Integer indice = tamanhoLista - 1; indice >= 0; indice--) {
            listPersonagensSelecionados.remove(indicesPersonagens[indice]);
            modeloTabelaEquipe.removeRow(indicesPersonagens[indice]);
        }
        jLabelQtdePersonagensSelecionados.setText(String.valueOf(listPersonagensSelecionados.size()));
    }
    
    //</editor-fold>

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAdicionarPersonagem;
    private javax.swing.JButton jButtonAvancar;
    private javax.swing.JButton jButtonRemoverPersonagem;
    private javax.swing.JLabel jLabelNomeJogador;
    private javax.swing.JLabel jLabelQtdePersonagensSelecionados;
    private javax.swing.JLabel jLabelQtdePersonagensSelecionadosTexto;
    private javax.swing.JLabel jLabelSelecioneSuaEquipe;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableEquipe;
    // End of variables declaration//GEN-END:variables

}
